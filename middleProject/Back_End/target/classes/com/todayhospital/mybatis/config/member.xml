  <?xml version="1.0" encoding="UTF-8"?>

  <!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <mapper namespace="Member">
    
      <!-- 아이디 중복 검색 -->
      <select id="m_idcheck" parameterType="java.lang.String" resultType="net.daum.dto.MemberDTO">
        select * from memberMvc where mem_id=#{id}
      </select>
      
      <!-- 우편주소 검색 -->
      <select id="z_list" resultType="zipcode">
        select * from zipcode where dong like #{dong}
      </select>
      
      <!-- 회원저장 -->
      <insert id="m_in">
        insert into memberMvc (mem_id,mem_pwd,mem_name,mem_zip,mem_zip2,mem_addr,mem_addr2,mem_phone01,
        mem_phone02,mem_phone03,mail_id,mail_domain,mem_state,mem_date) values(#{mem_id},#{mem_pwd},
        #{mem_name}, #{mem_zip},#{mem_zip2},#{mem_addr},#{mem_addr2},#{mem_phone01},#{mem_phone02},
        #{mem_phone03},#{mail_id},#{mail_domain},1,sysdate)
      </insert>
      
      <!-- 아이디와 회원이름을 기준으로 회원정보 검색 -> 비번찾기 -->
      <select id="p_find" parameterType="member" resultType="member">
        <!-- parameterType 속성은 전달인자 타입, resultType은 반환 자료형 -->
        select * from memberMvc where mem_id=#{mem_id} and mem_name=#{mem_name}
      </select>
      
      <!-- 암호화 된 임시 비번으로 수정 -->
      <update id="p_edit">
        update memberMvc set mem_pwd=#{mem_pwd} where mem_id=#{mem_id}   
      </update>
      
      <!-- 로그인 인증 처리 -->
      <select id="m_loginCheck" resultType="member">
        select * from memberMvc where mem_id=#{id} and mem_state=1
      </select>
      
      <!-- 회원정보 보기 -->
      <select id="userMember_info" resultType="member">
        select * from memberMvc where mem_id = #{id}
      </select>
      
      <!-- 정보수정 완료 -->
      <update id="medit_ok">
          update memberMvc set mem_pwd=#{mem_pwd}, mem_name=#{mem_name}, mem_zip=#{mem_zip},
          mem_zip2=#{mem_zip2},mem_addr=#{mem_addr}, mem_addr2=#{mem_addr2},
          mem_phone01=#{mem_phone01},mem_phone02=#{mem_phone02},mem_phone03=#{mem_phone03},
          mail_id=#{mail_id}, mail_domain=#{mail_domain} where mem_id=#{mem_id}
      </update>
      
      <!-- 회원탈퇴 -->
      <update id="m_del_ok" parameterType="member">
          update memberMvc set mem_delcont=#{mem_delcont}, mem_state=2, mem_deldate=sysdate
          where mem_id=#{mem_id}
      </update>
      
    </mapper>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    