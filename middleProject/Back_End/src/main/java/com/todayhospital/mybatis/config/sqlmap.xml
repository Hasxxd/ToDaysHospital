<?xml version="1.0" encoding="UTF-8"?>

<!-- 해당 xml 문서의 구조가 마이바티스의 환경설정을 구성하는 구조로 나타나 있음을 알려주는 설정 -->
<!DOCTYPE configuration 
PUBLIC "-//mybatis.org//DTD Config 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-config.dtd" >

<!-- mybatis 환결설정 -->
<configuration>

	<!-- 마이바티스 설정 중 표준 출력 로깅을 설정하는 세팅, 이 설정을 세팅해주면 마이바티스가 실행될때 해당 STS의 콘솔창에 
		마이바티스의 실행 과정과 결과가 콘솔에 출력됨 이 세팅을 이용하면 STS IDE 환경에서도 쉽게 쿼리문을 디버깅 할 수 있음 -->
	<settings>
		<setting name="logImpl" value="STDOUT_LOGGING" />
		<setting name="jdbcTypeForNull" value="NULL" /> <!-- mybatis null 피라미터값 insert ,update시 에러가 발생하는 것을 방지한다. -->
	</settings>

	<typeAliases>
		<!--<typeAlias type="com.todayhospital.dto.BoardDTO" alias="board" />  BoardDTO 빈클래스의 별칭 Alias 추가하면 board.xml에서 
		parameterType 또는 resultType 속성값을 풀패키지 경로가 아닌 별칭이름으로 간단히 적을 수 있다. -->
		<typeAlias type="com.todayhospital.dto.AdminDTO" alias="admin" />
		<!-- <typeAlias type="com.todayhospital.dto.GongjiDTO" alias="gongji" /> -->
		<typeAlias type="com.todayhospital.dto.MemberDTO" alias="member" />		
		<typeAlias type="com.todayhospital.dto.ZipcodeDTO" alias="zipcode" />
	    <typeAlias type="com.todayhospital.dto.BbsDTO" alias="bbs" />
		<typeAlias type="com.todayhospital.dto.FileDTO" alias="fileDto" />
	</typeAliases>

	<!-- 마이바티스의 실행 환경을 세팅한 구간 특히 이 구간에서는 마이바티스가 JDBC 수준에서 트랜잭션을 관리(transactionManager)하게 
		되며 데이터 소스의 유형을 POOLED로 설정, 쉽게 말하자면 커넥션 풀의 환경 설정이라고 보면됨 -->
	<environments default="development"> <!-- <environments default="development">에서 어떤 환경을 사용할지를 지정 -->
		<environment id="development">  <!-- <environment id="development">	개발 환경 설정 블록 -->
			<transactionManager type="JDBC" />
			<!-- 
					<transactionManager type="JDBC"/> 의미는 MyBatis 또는 iBATIS(mybatis 구버전->온라인 기술지원 서비스 종료됨.즉 단종됨)
						설정 파일에서 사용되며, 트랜잭션을 어떻게 관리할 것인지를 정의.
					type="JDBC"는 JDBC API를 사용해서 트랜잭션을 수동으로 관리하겠다는 의미.
					즉, JDBC 커넥션 객체의 commit(), rollback()을 직접 호출해서 트랜잭션을 제어.  
				-->
			<dataSource type="POOLED">
				<!-- 
					1. dataSource type="POOLED"은 일반적으로 Java 기반의 웹 애플리케이션에서 데이터베이스 연결을 관리할 때 사용되는 커넥션 풀(Connection Pool) 설정을 의미
							커넥션 풀은 일정 수의 데이터베이스 연결을 미리 만들어두고, 요청이 있을 때마다 그 중 하나를 재사용하는 방식.
							
							커넥션 풀의 장점)
							성능 향상: 매번 새로운 DB 연결을 만들지 않아도 됨.
							리소스 관리: 동시에 사용할 수 있는 커넥션 수를 제한할 수 있어 과도한 부하 방지.
							안정성: 재사용 가능한 커넥션 제공으로 시스템 안정성 증가.
							
					2. dataSource: 데이터베이스에 연결하기 위한 설정을 담고 있는 요소.
       		-->
				<property name="driver" value="oracle.jdbc.OracleDriver" />
				<property name="url"
					value="jdbc:oracle:thin:@112.220.114.31:1521:xe" />
				<property name="username" value="team1_202505m" />
				<property name="password" value="java" />
			</dataSource>
		</environment>
	</environments>

	<!-- 쿼리를 정의하는 매퍼 파일 내용이 들어가는 xml이 위치한 경로를 지정하는 곳 -->
	<!-- mappers 태그에는 SQL 코드 담고 있는 mybatis XML 매퍼 태그 파일이 있는 경로를  지정 -->
	<mappers>
		<!-- <mapper resource="com/todayhospital/mappers/mybatis/board.xml" />
		<mapper resource="com/todayhospital/mappers/mybatis/gongji.xml" />	-->
		<mapper resource="com/todayhospital/mappers/mybatis/member.xml" />
		<mapper resource="com/todayhospital/mappers/mybatis/bbs.xml" />
		<mapper resource="com/todayhospital/mappers/mybatis/admin.xml" />		
		<!-- <mapper resource="com/todayhospital/mappers/mybatis/admin_board.xml" />
		<mapper resource="com/todayhospital/mappers/mybatis/admin_bbs.xml" />
        <mapper resource="com/todayhospital/mappers/mybatis/admin_gongji.xml" /> -->
        <mapper resource="com/todayhospital/mappers/mybatis/admin_member.xml" />
	</mappers>

</configuration>